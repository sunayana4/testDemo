{"version":3,"sources":["logo.svg","actions/action.types.js","reducers/rootReducer.js","reducers/dataReducer.js","components/leftSide.component.js","constants/application.constant.js","actions/dataAction.js","containers/newContainer.js","actions/simpleAction.js","App.js","registerServiceWorker.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TODOS_DATA_REQUEST","TODOS_DATA_SUCCESS","TODOS_DATA_FAILURE","combineReducers","dataReducer","state","arguments","length","undefined","action","type","actionTypes","Object","assign","isLoading","todosData","data","weekDaysDict","1","2","3","4","5","6","0","leftSideComponent","props","_this","classCallCheck","this","_super","call","daysRecords","getTotdosData","react_default","a","createElement","records","keys","map","elem","day","Date","dt_txt","dayName","getDay","dateName","getDate","className","item","concat","getHours","getMinutes","Math","round","main","temp","groupedDays","Array","isArray","list","forEach","dateItem","push","Fragment","renderGroupedDays","renderErrorScreen","doFilterDate","Component","APIURL","getTodosFailure","NewContainerComponent","connect","objectSpread2","dispatch","simpleAction","payload","_ref","asyncToGenerator","regenerator_default","mark","_callee","getState","resut","resultJson","wrap","_context","prev","next","axios","get","constants","sent","t0","stop","_x","_x2","apply","CLIENT_ID","App","doGoogleSigIn","window","gapi","load","auth2","getAuthInstance","setState","isSignedIn","init","client_id","then","erro","currentUser","catch","error","console","log","_this2","newContainer","id","onClick","getContent","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","ReactDOM","render","react_redux_es","store","rootReducer","thunk","configureStore","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c2b4cc79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const TODOS_DATA_REQUEST = \"TODOS_DATA_REQUEST\";\r\nexport const TODOS_DATA_SUCCESS = \"TODOS_DATA_SUCCESS\";\r\nexport const TODOS_DATA_FAILURE = \"TODOS_DATA_FAILURE\";","import { combineReducers } from 'redux';\nimport simpleReducer from './simpleReducer';\nimport dataReducer from './dataReducer';\n\nexport default combineReducers({\n  dataReducer\n});\n","\r\n/* \r\n  src/reducers/simpleReducer.js\r\n*/\r\nimport * as actionTypes from \"./../actions/action.types\"\r\nexport default (state = {}, action) => {\r\n  const todosData = null;\r\n  switch (action.type) {\r\n    case actionTypes.TODOS_DATA_REQUEST:\r\n      \r\n      return Object.assign({},state, {\r\n        isLoading: true,\r\n        todosData: null\r\n      })\r\n      break;\r\n    case actionTypes.TODOS_DATA_SUCCESS:\r\n      \r\n      return Object.assign({},state, {\r\n        isLoading: false,\r\n        todosData: action.data\r\n      })\r\n      break;\r\n    case actionTypes.TODOS_DATA_FAILURE:\r\n      return Object.assign({},state, {\r\n        isLoading: false,\r\n        todosData: null\r\n      })\r\n      break;\r\n    default:\r\n      \r\n      return { todosData: todosData, \r\n        isLoading: false }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst weekDaysDict = {\r\n  1: \"Monday\",\r\n  2: \"Tuesday\",\r\n  3: \"Wednesday\",\r\n  4: \"Thursday\",\r\n  5: \"Friday\",\r\n  6: \"Saturday\",\r\n  0: \"Sunday\"\r\n}\r\n\r\nexport default class leftSideComponent extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      daysRecords: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTotdosData();\r\n  }\r\n\r\n\r\n  renderErrorScreen() {\r\n    return (<h2>Oops, There might be error or in fetching the temprature records. Fetching data from resource  !!!!!! </h2>)\r\n  }\r\n\r\n  renderGroupedDays(records) {\r\n    return Object.keys(records).map((elem) => {\r\n      const day = new Date(records[elem][0].dt_txt);\r\n      const dayName = day.getDay();\r\n      const dateName = day.getDate();\r\n      return (\r\n        <div className=\"col-md-2\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h2>{dateName}</h2>\r\n              <h5>{weekDaysDict[dayName]}</h5>\r\n            </div>\r\n            {records[elem].map((item) => {\r\n              return (<div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">{`${new Date(item.dt_txt).getHours()} : ${new Date(item.dt_txt).getMinutes()}`} </div>\r\n                  <div className=\"col-md-6\">{Math.round(item.main.temp - 252)}Â° C</div>\r\n                </div>\r\n              </div>)\r\n            })}\r\n          </div>\r\n        </div>)\r\n    })\r\n  }\r\n\r\n  doFilterDate() {\r\n    const groupedDays = {};\r\n    if (this.props.todosData &&\r\n      Array.isArray(this.props.todosData.list) &&\r\n      this.props.todosData.list.length > 0) {\r\n      this.props.todosData.list.forEach((dateItem) => {\r\n        const day = new Date(dateItem.dt_txt).getDate();\r\n        if (groupedDays[day]) {\r\n          groupedDays[day].push(dateItem)\r\n        } else {\r\n          groupedDays[day] = [dateItem]\r\n        }\r\n\r\n      })\r\n    }\r\n\r\n    if (Object.keys(groupedDays).length > 0) {\r\n      return (<><div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1>{Object.keys(groupedDays).length} Days Forecast</h1>\r\n        </div>\r\n      </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {this.renderGroupedDays(groupedDays)}\r\n          </div>\r\n        </div>\r\n      </>\r\n      )\r\n    } else {\r\n      return this.renderErrorScreen()\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        {this.doFilterDate()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","export const APIURL = \"https://api.openweathermap.org/data/2.5/forecast?id=2768279&appid=47de14068d893dfa372d4ed60b16a254\"","/* \r\n  src/actions/simpleAction.js\r\n*/\r\n\r\nimport * as actionTypes from \"./action.types\";\r\nimport * as constants from \"./../constants/application.constant\";\r\nimport axios from 'axios';\r\n\r\nexport function getTodosRequest(){\r\n  return {\r\n    type: actionTypes.TODOS_DATA_REQUEST\r\n  }\r\n}\r\n\r\nexport function getTodosSuccess(data){\r\n  \r\n  return {\r\n    type: actionTypes.TODOS_DATA_SUCCESS,\r\n    data\r\n  }\r\n}\r\n\r\nexport function getTodosFailure(data){\r\n  \r\n  return {\r\n    type: actionTypes.TODOS_DATA_FAILURE,\r\n    data\r\n  }\r\n}\r\n\r\nexport function getTodosData () {\r\n  return async (dispatch, getState) => {\r\n    \r\n    dispatch(getTodosRequest())\r\n    try {\r\n      const resut = await axios.get(constants.APIURL);\r\n      \r\n      const resultJson = resut.data; \r\n      dispatch(getTodosSuccess(resultJson))\r\n    } catch (error) { \r\n      \r\n      dispatch(getTodosFailure(error))\r\n    }     \r\n  }\r\n}\r\n  ","//import  { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { dataAction } from '../actions/dataAction';\r\nimport { simpleAction } from '../actions/simpleAction';\r\nimport leftSideComponent from \"./../components/leftSide.component\";\r\nimport { getTodosData } from \"./../actions/dataAction\"\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    simpleAction: () => dispatch(simpleAction()),\r\n    getTotdosData: () => dispatch(getTodosData())\r\n    //  dataAction : () => dispatch(dataAction())\r\n})\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        ...state,\r\n        todosData: state.dataReducer.todosData\r\n    })\r\n}\r\n//class newContainer extends Component {\r\n// simpleAction = (event) => {\r\n//     this.props.simpleAction();\r\n\r\nconst NewContainerComponent = connect(mapStateToProps, mapDispatchToProps)(leftSideComponent);\r\nexport default NewContainerComponent;\r\n","/* \n  src/actions/simpleAction.js\n*/\nexport const simpleAction = () => dispatch => {\n  dispatch({\n    type: 'SIMPLE_ACTION',\n    payload: 'result_of_simple_action'\n  })\n}\n","/* global gapi */\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NewContainerComponent from './containers/newContainer';\nconst CLIENT_ID = '609742289433-45uq942q6u8vmeh8ce069pqomgjieubo.apps.googleusercontent.com'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    }\n  }\n\n\n  doGoogleSigIn = () => {\n    try {\n      window.gapi.load(\"auth2\", () => {\n        if (!window.gapi.auth2.getAuthInstance()) {\n          window.gapi.auth2\n            .init({\n              client_id: CLIENT_ID,\n            })\n            .then((data, erro) => {\n              if (data && data.currentUser) {\n                this.setState({\n                  isSignedIn: true\n                });\n              } else {\n                this.setState({\n                  isSignedIn: false\n                });\n              }\n            }).catch((error) => {\n              console.log(error)\n              this.setState({\n                isSignedIn: false\n              });\n            })\n        } else {\n          this.setState({\n            isSignedIn: true\n          });\n        }\n      });\n    } catch (error) {\n      this.setState({\n        isSignedIn: false\n      });\n      console.log(error)\n    }\n\n  }\n\n  getContent() {\n    if (this.state.isSignedIn) {\n      return <NewContainerComponent />\n    } else {\n      return (\n        <div>\n          <p>You are not signed in. Click here to sign in.</p>\n          <button id=\"loginButton\" onClick={() => { this.doGoogleSigIn() }}>Login with Google</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {  createStore,applyMiddleware } from 'redux';\n// Required for Redux store setup\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './App';\nimport reducer from './reducers/rootReducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport registerServiceWorker from './registerServiceWorker';\nconst sagaMiddleware = createSagaMiddleware()\ncreateStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n)\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App /> \n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState={}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}